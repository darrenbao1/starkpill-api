# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Metadata {
  description: String!
  imageUrl: String!
  ingredient: String!
  background: String!
  mintPrice: String!
  fame: Float!
  defame: Float!
}

type ChangeAttribute {
  oldBackground: Int!
  oldIngredient: Int!
  newBackground: Int!
  newIngredient: Int!
  callee: User!
}

type Mint {
  mintPrice: String!
  background: Int!
  ingredient: Int!
  minter: User!
}

type Transfer {
  from: User!
  to: User!
}

type Transaction {
  hash: String!
  token: Token!
  blockNumber: Int!
  timestamp: Timestamp!
  transactionType: TransactionType!
  mint: Mint
  transfer: Transfer
  changeAttribute: ChangeAttribute
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

"""Types of indexed transactions"""
enum TransactionType {
  MINT
  TRANSFER
  CHANGE_ATTRIBUTE
}

type User {
  address: String!
  tokens: [Token!]!
  numberOfTokensOwned: Int!
  transactions: [Transaction!]!
}

type Token {
  id: Int!
  transactions: [Transaction!]!
  owner: User!
  background: Int!
  ingredient: Int!
  metadata: Metadata!
}

type BackPackMetadata {
  id: Int!
  description: String!
  imageUrl: String!
  isIngredient: Boolean!
  itemName: String!
}

type PharmacyData {
  typeIndex: Float!
  index: Float!
  startAmount: Float!
  amount_left: Float!
}

type Query {
  query: String!
  token(tokenId: Int!): Token!
  tokens(tokenIds: [Int!]!): [Token!]!
  allTokens(skip: Int = 0, first: Int = 20, orderBy: OrderBy = DESC): [Token!]!
  ownerBackpack(ownerAddress: String!): [BackPackMetadata!]!
  transaction(transactionHash: String!): Transaction!
  transactions(transactionHashes: [String!]!): [Transaction!]!
  allTransactions(skip: Int = 0, first: Int = 20, orderBy: OrderBy = DESC): [Transaction!]!
  user(address: String!): User!
  lastIndexedBlock: Int!
  getPharmacyData: [PharmacyData!]!
}

"""
Ascending or descending block order. Ascending means the earliest block first, descending means the latest block first. Default is descending.
"""
enum OrderBy {
  ASC
  DESC
}

type Mutation {
  mutation: String!
  refreshMetadataForOneToken(tokenId: Int!): String!
  refreshMetadataForAllTokens: String!
}